---
version: '3.8'

services:
  ocis-init:
    # Use a minimal image with the necessary tools
    image: busybox:latest
    container_name: storage-ocis-init
    # Set the ownership to the hardcoded UID/GID that the OCIS container uses internally.
    command: chown -R 1000:1000 /etc/ocis
    volumes:
      # Mount the same volume as the main ocis service
      - ${DATA_BASE_PATH}/storage/ocis:/etc/ocis
    environment:
      - PUID=1000
      - PGID=1000
    # This init container does not need to be on any network
    networks: []
  ocis:
    image: owncloud/ocis:${OCIS_VERSION}
    container_name: storage-ocis
    restart: unless-stopped
    depends_on:
      ocis-init:
        condition: service_completed_successfully
    volumes:
      - ${DATA_BASE_PATH}/storage/ocis:/etc/ocis
    entrypoint:
      - /bin/sh
    # This command initializes a full config with random secrets on first run,
    # and then starts the server on all subsequent runs.
    command: ["-c", "ocis init || true; exec ocis server"]
    environment:
      - TZ=${TZ}
      # --- General Config ---
      - OCIS_URL=https://${OCIS_SUBDOMAIN}.${DOMAIN_NAME}
      - OCIS_BASE_DATA_PATH=/etc/ocis
      #- OCIS_LOG_LEVEL=info
      - OCIS_INSECURE=false
      # --- Admin User ---
      #- OCIS_ADMIN_USERNAME=${OCIS_ADMIN_USERNAME}
      #- OCIS_ADMIN_PASSWORD=${OCIS_ADMIN_PASSWORD}
      # EXPLICITLY disable the default admin account to rely solely on OIDC
      - OCIS_ADMIN_USER_ID=""
      # --- Service Management ---
      - OCIS_EXCLUDE_RUN_SERVICES=idp
      # --- Backend/Proxy OIDC Configuration ---
      - OCIS_OIDC_ISSUER=https://auth.${DOMAIN_NAME}/realms/company-realm
      #- OCIS_OIDC_ISSUER=http://iam-keycloak:8080/realms/company-realm
      - OCIS_OIDC_CLIENT_ID=${OCIS_OIDC_CLIENT_ID}
      - OCIS_OIDC_CLIENT_SECRET=${OCIS_OIDC_CLIENT_SECRET}
      - PROXY_OIDC_INSECURE_SKIP_VERIFY=true
      # --- Frontend/Web OIDC Configuration ---
      - WEB_OIDC_CLIENT_ID=${OCIS_OIDC_CLIENT_ID}
      - WEB_OIDC_AUTHORITY=https://auth.${DOMAIN_NAME}/realms/company-realm
      - WEB_OIDC_METADATA_URL=https://auth.${DOMAIN_NAME}/realms/company-realm/.well-known/openid-configuration
      - WEB_OIDC_SCOPE=openid profile email
      # --- OCIS Proxy Settings for OIDC ---
      - PROXY_AUTOPROVISION_ACCOUNTS=true
      - PROXY_ROLE_ASSIGNMENT_DRIVER=oidc
      - PROXY_USER_OIDC_CLAIM=preferred_username
      - PROXY_USER_CS3_CLAIM=username
      - PROXY_TLS=false
      - PROXY_OIDC_REWRITE_WELLKNOWN=true
      - GRAPH_ASSIGN_DEFAULT_USER_ROLE=false
      - GRAPH_USERNAME_MATCH=none
    networks:
      - traefik_net
      - backend_net
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik_net"
      - "traefik.http.routers.ocis.rule=Host(`${OCIS_SUBDOMAIN}.${DOMAIN_NAME}`)"
      - "traefik.http.routers.ocis.entrypoints=websecure"
      - "traefik.http.routers.ocis.tls.certresolver=cloudflare"
      - "traefik.http.services.ocis.loadbalancer.server.port=9200"
      - "traefik.http.services.ocis.loadbalancer.server.scheme=http"
    deploy:
      resources:
        limits:
          memory: 8G
        reservations:
          cpus: '0.5'
          memory: 2G
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

networks:
  traefik_net:
    external: true
  backend_net:
    external: true
