---
name: CI Configuration Validation

# yamllint disable-line rule:truthy
on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  validate-and-lint:
    name: Validate, Lint, and Format Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install pre-commit
        run: pip install pre-commit

      - name: Run pre-commit hooks on all files
        # This command runs the exact same checks defined in .pre-commit-config.yaml
        # ensuring consistency between local development and CI.
        run: pre-commit run --all-files

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Aggregate .env.example Files for Validation
        run: |
          echo "Preparing a unified .env file for validation..."
          find . -name '.env.example' -exec cat {} + | sort -u > .env
          echo "AUTHENTIK_OUTPOST_TOKEN=placeholder_for_ci_check" >> .env

      - name: Validate All Docker Compose Files
        run: |
          for dir in $(find . -name 'docker-compose.yml' -exec dirname {} \;); do
            echo "Validating Docker Compose in directory: $dir"
            docker-compose -f "$dir/docker-compose.yml" --env-file ./.env config > /dev/null
            if [ $? -ne 0 ]; then
              echo "::error::Validation failed for Docker Compose file in $dir"
              exit 1
            fi
            echo "Validation successful for $dir"
          done

      - name: All Checks Passed
        run: echo "All infrastructure configuration files are valid and correctly formatted."