---
version: '3.8'

services:
  prometheus:
    image: prom/prometheus:${VERSION_PROMETHEUS}
    container_name: prometheus
    restart: unless-stopped
    networks:
      - shared-internal-net
    volumes:
      - ${APPDATA_PATH}/monitoring/prometheus_data:/prometheus
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.enable-lifecycle'

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:${VERSION_CADVISOR}
    container_name: cadvisor
    restart: unless-stopped
    privileged: true # Required for cAdvisor to access host metrics
    networks:
      - shared-internal-net
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro

  grafana:
    image: grafana/grafana:${VERSION_GRAFANA}
    container_name: grafana
    restart: unless-stopped
    networks:
      - shared-internal-net
      - traefik-public
    volumes:
      - ${APPDATA_PATH}/monitoring/grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
      - GF_AUTH_GENERIC_OAUTH_ENABLED=true
      - GF_AUTH_GENERIC_OAUTH_NAME=Authentik
      - GF_AUTH_GENERIC_OAUTH_CLIENT_ID=${GRAFANA_OAUTH_CLIENT_ID}
      - GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET=${GRAFANA_OAUTH_CLIENT_SECRET}
      - GF_AUTH_GENERIC_OAUTH_SCOPES=openid profile email groups
      - GF_AUTH_GENERIC_OAUTH_AUTH_URL=https://${SUBDOMAIN_AUTH}.${DOMAIN}/application/o/authorize/
      - GF_AUTH_GENERIC_OAUTH_TOKEN_URL=https://${SUBDOMAIN_AUTH}.${DOMAIN}/application/o/token/
      - GF_AUTH_GENERIC_OAUTH_API_URL=https://${SUBDOMAIN_AUTH}.${DOMAIN}/application/o/userinfo/
      - GF_AUTH_GENERIC_OAUTH_ALLOW_SIGN_UP=true
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`${SUBDOMAIN_GRAFANA}.${DOMAIN}`)"
      - "traefik.http.routers.grafana.tls=true"
      - "traefik.http.routers.grafana.tls.certresolver=cloudflare"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"
      # Grafana is NOT protected by forward auth. It has its own robust OIDC integration.

  loki:
    image: grafana/loki:${VERSION_LOKI}
    container_name: loki
    restart: unless-stopped
    networks:
      - shared-internal-net
    volumes:
      - ${APPDATA_PATH}/monitoring/loki_data:/loki
      - ./config/loki-config.yml:/etc/loki/config.yml:ro
    command: -config.file=/etc/loki/config.yml

  promtail:
    image: grafana/promtail:${VERSION_PROMTAIL}
    container_name: promtail
    restart: unless-stopped
    networks:
      - shared-internal-net
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./config/promtail-config.yml:/etc/promtail/config.yml:ro
    command: -config.file=/etc/promtail/config.yml

  uptime-kuma:
    image: louislam/uptime-kuma:${VERSION_UPTIME_KUMA}
    container_name: uptime-kuma
    restart: unless-stopped
    networks:
      - traefik-public
    volumes:
      - ${APPDATA_PATH}/monitoring/uptime_kuma_data:/app/data
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.uptime-kuma.rule=Host(`${SUBDOMAIN_STATUS}.${DOMAIN}`)"
      - "traefik.http.routers.uptime-kuma.tls=true"
      - "traefik.http.routers.uptime-kuma.tls.certresolver=cloudflare"
      - "traefik.http.services.uptime-kuma.loadbalancer.server.port=3001"
      - "traefik.http.routers.uptime-kuma.middlewares=authentik@docker"

networks:
  traefik-public:
    external: true
  shared-internal-net:
    external: true